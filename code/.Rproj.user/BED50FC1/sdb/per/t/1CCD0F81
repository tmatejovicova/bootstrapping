{
    "collab_server" : "",
    "contents" : "## MT4113 Assignment 4 ##\n## Coding style follows Google's R Style Guide https://google.github.io/styleguide/Rguide.xml ##\n## I confirm that the attached is my own work, except where clearly indicated in the text. ##\n\n## A script to perform the simulation study ##\n\nsource(\"EvaluateBootstrapCI.R\")\n\n# Ensure results are the same everytime the study is run\nset.seed(798654327)\n\n# Empirical distributions to sample from\nNORMAL.DATA.SOURCE <- rnorm(n = 1000, mean = 0, sd = 1)\nEXP.DATA.SOURCE <- rexp(n = 1000, rate = 1)\n\n# Stable variable constants to be used in all simulations\nNUM.RESAMPLES <- 999 # The 1000th resample is the data itself\nNUM.SIM <- 1000\nALPHA <- 0.05\n\n## Simulation 1: Sample size and Percentile method performance ##\n## Larger sample sizes ##\nsample.sizes <- seq(5, 100, 5)\nincl.sym <- numeric(20)\nincl.non.sym <- numeric(20)\nfor (i in 1:20) {\n  # Symmetric distribution\n  input <- GenerateEmpiricalInputData(num.sim = NUM.SIM, data.source = NORMAL.DATA.SOURCE, sample.size = sample.sizes[i])\n  incl.sym[i] <- EvaluateBootstrapCI(input$data, input$mean, GET.CI.FUNC = GetPercentileBootstrapCI, num.resamples = NUM.RESAMPLES, alpha = ALPHA)\n  # Non-symmetric distribution\n  input <- GenerateEmpiricalInputData(num.sim = NUM.SIM, data.source = EXP.DATA.SOURCE, sample.size = sample.sizes[i])\n  incl.non.sym[i] <- EvaluateBootstrapCI(input$data, input$mean, GET.CI.FUNC = GetPercentileBootstrapCI, num.resamples = NUM.RESAMPLES, alpha = ALPHA)\n}\nsim1.1 <- data.frame(sample.sizes, incl.sym, incl.non.sym)\nwrite.csv(sim1.1, file = \"output/sim1.1\")\n# Figure 1 - Percentile method for larger sample sizes\nwith(sim1.1, plot(sample.sizes, incl.sym, xlim = c(5,100), xaxt = \"n\", ylim = c(84, 100), yaxt = \"n\", main = \"Percentile method for larger sample sizes\", xlab = \"Sample size\", ylab = \"Inclusion percentage [%]\", col = \"blue\", pch = 16))\nwith(sim1.1, points(sample.sizes, incl.non.sym, col = \"red\", pch = 16))\naxis(1, at = seq(5, 100, 5))\naxis(2, at = seq(84, 100, 1))\nabline(h = 95)\nabline(h = 97, lty = 2)\nabline(h = 93, lty = 2)\nlegend(\"bottomright\", legend = c(\"Symmetric\", \"Non-symmetric\"), col = c(\"blue\", \"red\"), pch = c(16, 16))\ndev.copy(png, \"plots/fig1.png\")\ndev.off()\n\n## Smaller sample sizes ##\nsample.sizes <- seq(4, 42, 2)\nincl.sym <- numeric(20)\nincl.non.sym <- numeric(20)\nfor (i in 1:20) {\n  # Symmetric distribution\n  input <- GenerateEmpiricalInputData(num.sim = NUM.SIM, data.source = NORMAL.DATA.SOURCE, sample.size = sample.sizes[i])\n  incl.sym[i] <- EvaluateBootstrapCI(input$data, input$mean, GET.CI.FUNC = GetPercentileBootstrapCI, num.resamples = NUM.RESAMPLES, alpha = ALPHA)\n  # Non-symmetric distribution\n  input <- GenerateEmpiricalInputData(num.sim = NUM.SIM, data.source = EXP.DATA.SOURCE, sample.size = sample.sizes[i])\n  incl.non.sym[i] <- EvaluateBootstrapCI(input$data, input$mean, GET.CI.FUNC = GetPercentileBootstrapCI, num.resamples = NUM.RESAMPLES, alpha = ALPHA)\n}\nsim1.2 <- data.frame(sample.sizes, incl.sym, incl.non.sym)\nwrite.csv(sim1.2, file = \"output/sim1.2\")\n# Figure 2 - Percentile method for smaller sample sizes\nwith(sim1.2, plot(sample.sizes, incl.sym, xlim = c(4,42), xaxt = \"n\", ylim = c(70, 100), yaxt = \"n\", main = \"Percentile method for smaller sample sizes\", xlab = \"Sample size\", ylab = \"Inclusion percentage [%]\", col = \"blue\", pch = 16))\nwith(sim1.2, points(sample.sizes, incl.non.sym, col = \"red\", pch = 16))\naxis(1, at = seq(4, 42, 2))\naxis(2, at = seq(45, 100, 5))\nabline(h = 95)\nabline(h = 100, lty = 2)\nabline(h = 90, lty = 2)\nlegend(\"bottomright\", legend = c(\"Symmetric\", \"Non-symmetric\"), col = c(\"blue\", \"red\"), pch = c(16, 16))\ndev.copy(png, \"plots/fig2.png\")\ndev.off()\n# Figure 3 - T-test for difference in percentile method accuracy with symmetric and non-symmetric distribution\nwith(sim1.2, t.test(incl.sym, incl.non.sym, paired = TRUE))\n# Figure 4 - Symmetric and non-symmetric distribution for percentile method\nwith(sim1.2, plot(sample.sizes, incl.sym - incl.non.sym, main = \"Symmetric and non-symmetric distribution for percentile method\", xlab = \"Sample size\", ylab = \"Inclusion percentage symmetric - non-symmetric [%]\"))\ndev.copy(png, \"plots/fig4.png\")\ndev.off()\n\n## Simulation 2: Comparison of Percentile Method and BCa Method\nsample.sizes <- seq(4,42,2)\nincl.sym.perc <- numeric(20)\nincl.sym.BCa <- numeric(20)\nincl.non.sym.perc <- numeric(20)\nincl.non.sym.BCa <- numeric(20)\nfor (i in 1:20) {\n  # Symmetric distribution\n  input <- GenerateEmpiricalInputData(num.sim = NUM.SIM, data.source = NORMAL.DATA.SOURCE, sample.size = sample.sizes[i])\n  incl.sym.perc[i] <- EvaluateBootstrapCI(input$data, input$mean, GET.CI.FUNC = GetPercentileBootstrapCI, num.resamples = NUM.RESAMPLES, alpha = ALPHA)\n  incl.sym.BCa[i] <- EvaluateBootstrapCI(input$data, input$mean, GET.CI.FUNC = GetBCaBootstrapCI, num.resamples = NUM.RESAMPLES, alpha = ALPHA)\n  # Non-symmetric distribution\n  input <- GenerateEmpiricalInputData(num.sim = NUM.SIM, data.source = EXP.DATA.SOURCE, sample.size = sample.sizes[i])\n  incl.non.sym.perc[i] <- EvaluateBootstrapCI(input$data, input$mean, GET.CI.FUNC = GetPercentileBootstrapCI, num.resamples = NUM.RESAMPLES, alpha = ALPHA)\n  incl.non.sym.BCa[i] <- EvaluateBootstrapCI(input$data, input$mean, GET.CI.FUNC = GetBCaBootstrapCI, num.resamples = NUM.RESAMPLES, alpha = ALPHA)\n}\nsim2 <- data.frame(sample.sizes, incl.sym.perc, incl.sym.BCa, incl.non.sym.perc, incl.non.sym.BCa)\nsim2[\"sym.diff\"]<-sim2$incl.sym.BCa - sim2$incl.sym.perc\nsim2[\"non.sym.diff\"]<-sim2$incl.non.sym.BCa - sim2$incl.non.sym.perc\nwrite.csv(sim2, file = \"output/sim2\")\n# Figure 5 - Percentile method and BCa method\nwith(sim2, plot(sample.sizes, sym.diff, ylim = c(-2, 3), main = \"Percentile method and BCa method\", xlab = \"Sample size\", ylab = \"Inclusion percentage BCa - percentile [%]\", col = \"blue\", pch = 16))\nwith(sim2, points(sample.sizes, non.sym.diff, col = \"red\", pch = 16))\nabline(h = 0, lty = 2)\nlegend(\"bottomright\", legend = c(\"Symmetric\", \"Non-symmetric\"), col = c(\"blue\", \"red\"), pch = c(16, 16))\ndev.copy(png, \"plots/fig5.png\")\ndev.off()\n# Figure 6 - T-test for difference in accuracy between BCa and percentile method for symmetric and non-symmetric distribution \nwith(sim2, t.test(non.sym.diff, sym.diff, paired = TRUE))\n\n## Simulation 3: Comparison of non-studentized and studentized pivotal method\nsample.sizes <- seq(4,42,2)\nincl.sym.non <- numeric(20)\nincl.sym.stud <- numeric(20)\nincl.non.sym.non <- numeric(20)\nincl.non.sym.stud <- numeric(20)\nfor (i in 1:20) {\n  # Symmetric distribution\n  input <- GenerateEmpiricalInputData(num.sim = NUM.SIM, data.source = NORMAL.DATA.SOURCE, sample.size = sample.sizes[i])\n  incl.sym.non[i] <- EvaluateBootstrapCI(input$data, input$mean, GET.CI.FUNC = GetNonStudPivotalBootstrapCI, num.resamples = NUM.RESAMPLES, alpha = ALPHA)\n  incl.sym.stud[i] <- EvaluateBootstrapCI(input$data, input$mean, GET.CI.FUNC = GetStudPivotalBootstrapCI, num.resamples = NUM.RESAMPLES, alpha = ALPHA)\n  # Non-symmetric distribution\n  input <- GenerateEmpiricalInputData(num.sim = NUM.SIM, data.source = EXP.DATA.SOURCE, sample.size = sample.sizes[i])\n  incl.non.sym.non[i] <- EvaluateBootstrapCI(input$data, input$mean, GET.CI.FUNC = GetNonStudPivotalBootstrapCI, num.resamples = NUM.RESAMPLES, alpha = ALPHA)\n  incl.non.sym.stud[i] <- EvaluateBootstrapCI(input$data, input$mean, GET.CI.FUNC = GetStudPivotalBootstrapCI, num.resamples = NUM.RESAMPLES, alpha = ALPHA)\n}\nsim3 <- data.frame(sample.sizes, incl.sym.non, incl.sym.stud, incl.non.sym.non, incl.non.sym.stud)\nwrite.csv(sim3, file = \"output/sim3\")\n# Figure 7 - Pivotal methods with symmetric distribution\nwith(sim3, plot(sample.sizes, incl.sym.non, ylim = c(70, 100), main = \"Pivotal methods with symmetric distribution\", xlab = \"Sample size\", ylab = \"Inclusion percentage [%]\", col = \"blue\", pch = 16))\nwith(sim3, points(sample.sizes, incl.sym.stud, col = \"red\", pch = 16))\nwith(sim3, points(sample.sizes, incl.non.sym.non, col = \"blue\", pch = 1))\nwith(sim3, points(sample.sizes, incl.non.sym.stud, col = \"red\", pch = 1))\nabline(h = 95, lty = 2)\nlegend(\"bottomright\", legend = c(\"non-stud sym\", \"non-stud non-sym\", \"stud sym\", \"stud non-sym\"), col = c(\"blue\", \"blue\", \"red\", \"red\"), pch = c(16, 1, 16, 1))\ndev.copy(png, \"plots/fig7.png\")\ndev.off()\n\n## Simulation 4: Comparison of studentized pivotal and BCa method\nsample.sizes <- seq(4,42,2)\nincl.sym.bca <- numeric(20)\nincl.sym.stud <- numeric(20)\nincl.non.sym.bca <- numeric(20)\nincl.non.sym.stud <- numeric(20)\nfor (i in 1:20) {\n  # Symmetric distribution\n  input <- GenerateEmpiricalInputData(num.sim = NUM.SIM, data.source = NORMAL.DATA.SOURCE, sample.size = sample.sizes[i])\n  incl.sym.bca[i] <- EvaluateBootstrapCI(input$data, input$mean, GET.CI.FUNC = GetBCaBootstrapCI, num.resamples = NUM.RESAMPLES, alpha = ALPHA)\n  incl.sym.stud[i] <- EvaluateBootstrapCI(input$data, input$mean, GET.CI.FUNC = GetStudPivotalBootstrapCI, num.resamples = NUM.RESAMPLES, alpha = ALPHA)\n  # Non-symmetric distribution\n  input <- GenerateEmpiricalInputData(num.sim = NUM.SIM, data.source = EXP.DATA.SOURCE, sample.size = sample.sizes[i])\n  incl.non.sym.bca[i] <- EvaluateBootstrapCI(input$data, input$mean, GET.CI.FUNC = GetBCaBootstrapCI, num.resamples = NUM.RESAMPLES, alpha = ALPHA)\n  incl.non.sym.stud[i] <- EvaluateBootstrapCI(input$data, input$mean, GET.CI.FUNC = GetStudPivotalBootstrapCI, num.resamples = NUM.RESAMPLES, alpha = ALPHA)\n}\nsim4 <- data.frame(sample.sizes, incl.sym.bca, incl.sym.stud, incl.non.sym.bca, incl.non.sym.stud)\nwrite.csv(sim4, file = \"output/sim4\")\n# Figure 8 - Bootstrap methods with symmetric distribution\nwith(sim4, plot(sample.sizes, incl.sym.bca, ylim = c(70, 100), main = \"Bootstrap methods with symmetric distribution\", xlab = \"Sample size\", ylab = \"Inclusion percentage [%]\", col = \"blue\", pch = 16))\nwith(sim4, points(sample.sizes, incl.non.sym.bca, col = \"blue\", pch = 1))\nwith(sim4, points(sample.sizes, incl.sym.stud, col = \"red\", pch = 16))\nwith(sim4, points(sample.sizes, incl.non.sym.stud, col = \"red\", pch = 1))\nabline(h = 95, lty = 2)\nlegend(\"bottomright\", legend = c(\"BCa sym\", \"BCa non-sym\", \"Stud pivotal sym\", \"Stud pivotal non-sym\"), col = c(\"blue\", \"blue\", \"red\", \"red\"), pch = c(16, 1, 16, 1))\ndev.copy(png, \"plots/fig8.png\")\ndev.off()",
    "created" : 1511348274069.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3183714461",
    "id" : "1CCD0F81",
    "lastKnownWriteTime" : 1511348072,
    "last_content_update" : 1511348072,
    "path" : "~/git/MT4113A3-final/code/SimulationStudy.R",
    "project_path" : "SimulationStudy.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}